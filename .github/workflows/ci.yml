name: v3-contracts

on:
  push:
    branches:
      - main
      - development
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        solidity: [""]
        settings: ['{"optimizer":{"enabled":true,"runs":200}}']
        #include:
        #- solidity: "0.8.14"
        #  settings: '{"optimizer":{"enabled":true,"runs":200}}'
        #- solidity: "0.7.4"
        #  settings: '{"optimizer":{"enabled":true,"runs":200}}'
        #- solidity: "0.6.6"
        #  settings: '{"optimizer":{"enabled":true,"runs":200}}'
        #- solidity: "0.5.0"
        #  settings: '{"optimizer":{"enabled":true,"runs":200}}'
    env:
      SOLIDITY_VERSION: ${{ matrix.solidity }}
      SOLIDITY_SETTINGS: ${{ matrix.settings }}
      PROD: ""
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v4
        with:
          node-version: 18.11.0
      - uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            **/.foundry
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install Foundry
        uses: onbjerg/foundry-toolchain@v1
        with:
          version: nightly
      - run: yarn --frozen-lockfile
      - run: yarn build
      - run: yarn test
      - run: yarn coverage
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
